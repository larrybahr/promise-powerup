{"version":3,"file":"promisePowerup.js","sources":["../src/named-promises.ts"],"sourcesContent":["declare namespace NamedPromise\r\n{\r\n\tinterface NamedPromiseStore\r\n\t{\r\n\t\t[promiseName: string]: NamedPromiseStoreEntry\r\n\t}\r\n\r\n\tinterface NamedPromiseStoreEntry\r\n\t{\r\n\t\tpromise: Promise<unknown>\r\n\t\tresolve: (value?: unknown | PromiseLike<unknown>) => void\r\n\t\treject: (reason?: any) => void\r\n\t\tnamedPromiseCreated: boolean\r\n\t}\r\n}\r\n\r\n/**\r\n * @classdesc Adds the ability to give a promise a name so it can be waited on without passing stuff around or keeping it in the global scope\r\n */\r\nexport class NamedPromise<T> extends Promise<T>\r\n{\r\n\t/**\r\n\t * Holds all the named promise info\r\n\t */\r\n\tprivate static namedPromiseStore: NamedPromise.NamedPromiseStore = {};\r\n\r\n\t/**\r\n\t * @param executor A callback used to initialize the promise. This callback is passed two arguments: a resolve callback used to resolve the promise with a value or the result of another promise, and a reject callback used to reject the promise with a provided reason or error.\r\n\t * @description Creates the promise part of the named promise\r\n\t */\r\n\tconstructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void)\r\n\t{\r\n\t\tsuper(executor);\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * name of the promise\r\n\t */\r\n\tget name(): string\r\n\t{\r\n\t\treturn this.name;\r\n\t}\r\n\tset name(name)\r\n\t{\r\n\t\t// Check and normalize parameters\r\n\t\tif ('string' !== typeof name)\r\n\t\t{\r\n\t\t\tthrow new Error('name must be a string');\r\n\t\t}\r\n\t\tif (NamedPromise.IsCreated(name))\r\n\t\t{\r\n\t\t\tthrow new Error('Promise with name ' + name + ' already exists');\r\n\t\t}\r\n\r\n\t\tif ('object' !== typeof (NamedPromise.namedPromiseStore[name]))\r\n\t\t{\r\n\t\t\tNamedPromise.CreateNamedPromise(name);\r\n\t\t}\r\n\t\tNamedPromise.namedPromiseStore[name].namedPromiseCreated = true;\r\n\t\tthis\r\n\t\t\t.then((result: unknown) =>\r\n\t\t\t{\r\n\t\t\t\tNamedPromise.namedPromiseStore[name].resolve(result);\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t\t.catch((err: unknown) =>\r\n\t\t\t{\r\n\t\t\t\tNamedPromise.namedPromiseStore[name].reject(err);\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @param name name of the promise\r\n\t * @return the new named promise\r\n\t * @description Creates the internal structure for the named promise\r\n\t */\r\n\tprivate static CreateNamedPromise(name: string): Promise<unknown>\r\n\t{\r\n\t\tlet tempObject: Partial<NamedPromise.NamedPromiseStoreEntry> = {};\r\n\r\n\t\tif (\"object\" === (typeof NamedPromise.namedPromiseStore[name]))\r\n\t\t{\r\n\t\t\tthrow new Error('Promise with name ' + name + ' already exists');\r\n\t\t}\r\n\r\n\t\ttempObject.promise = new Promise(function SettleNamedPromise(resolve, reject)\r\n\t\t{\r\n\t\t\ttempObject.resolve = resolve;\r\n\t\t\ttempObject.reject = reject;\r\n\t\t\treturn;\r\n\t\t});\r\n\t\ttempObject.namedPromiseCreated = false;\r\n\r\n\t\tNamedPromise.namedPromiseStore[name] = tempObject as NamedPromise.NamedPromiseStoreEntry;\r\n\t\treturn NamedPromise.namedPromiseStore[name].promise;\r\n\t}\r\n\r\n\t/**\r\n\t * @param name name of the promise\r\n\t * @returns Returns the named promise\r\n\t * @description Gets a named promise even if it has not been created yet.\r\n\t */\r\n\tpublic static GetNamedPromise(name: string): Promise<unknown>\r\n\t{\r\n\t\tlet tempPromise: Promise<unknown>;\r\n\r\n\t\t/**\r\n\t\t\t * Check and normalize parameters\r\n\t\t\t */\r\n\t\tif ('string' !== typeof name)\r\n\t\t{\r\n\t\t\tthrow new Error('Name is not a string. name = ' + JSON.stringify(name));\r\n\t\t}\r\n\r\n\t\tif ('object' !== typeof (NamedPromise.namedPromiseStore[name]))\r\n\t\t{\r\n\t\t\ttempPromise = NamedPromise.CreateNamedPromise(name);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttempPromise = NamedPromise.namedPromiseStore[name].promise;\r\n\t\t}\r\n\r\n\t\treturn tempPromise;\r\n\t}\r\n\r\n\t/**\r\n\t * @param name name of the promise\r\n\t * @returns True if the promise has been created else false\r\n\t * @description Tests if the named promise has been created\r\n\t */\r\n\tpublic static IsCreated(name: string): boolean\r\n\t{\r\n\t\t/**\r\n\t\t * Check and normalize parameters\r\n\t\t */\r\n\t\tif ('string' !== typeof name)\r\n\t\t{\r\n\t\t\tthrow new Error('Name is not a string. name = ' + JSON.stringify(name));\r\n\t\t}\r\n\r\n\t\tif ('object' === typeof (NamedPromise.namedPromiseStore[name]) &&\r\n\t\t\ttrue === NamedPromise.namedPromiseStore[name].namedPromiseCreated)\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n"],"names":["NamedPromise","executor","name","Error","IsCreated","namedPromiseStore","CreateNamedPromise","namedPromiseCreated","then","result","resolve","catch","err","reject","tempObject","promise","Promise","SettleNamedPromise","tempPromise","JSON","stringify"],"mappings":"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"}